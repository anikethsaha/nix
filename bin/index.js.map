{"version":3,"sources":["utils/argument-manage.ts","utils/list-prompt.ts","utils/script-handler.ts","../package.json","index.ts"],"names":["module","exports","name","version","description","main","scripts","lint","jest","local","release","commit","build","watch","bin","rpx","files","husky","hooks","keywords","author","devDependencies","commitizen","eslint","nodemon","prettier","typescript","dependencies","inquirer","prettycli","engines","npm","repository","type","url","license"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["import { error, command  } from \"prettycli\";\r\n\r\nexport const manageArgv = (argv: string): void => {\r\n  // regex to match help,--help,-help,--h,-h infact any number of \"-\" will work\r\n  if (!(/([\\-+]?(help)|[\\-+]h)/.test(argv))) {\r\n    error(\"WRONG CMD: it expects 0 arguments to passed \", {\r\n      exit: false,\r\n      silent: false,\r\n    });\r\n    error(\"run $ npi --help # to know more\", {\r\n      exit: false,\r\n      silent: false,\r\n    });\r\n  } else {\r\n    process.stdout.write(`  Usage \\n\r\n    Please go to your directory where package.json is present and then run \\n\r\n    $ npx npi\r\n\r\n    or\r\n\r\n    $ npi # if installed globally\r\n    `);\r\n  }\r\n  process.exit();\r\n};\r\n","import * as inquirer from \"inquirer\";\r\n\r\nexport default (name: string , message: string, choicesList: string[]): inquirer.Answers =>   inquirer\r\n.prompt({\r\n  type : \"list\",\r\n  name,\r\n  message,\r\n  choices : choicesList,\r\n});\r\n","import * as cp from \"child_process\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { info } from \"prettycli\";\r\nimport listPrompt from \"./list-prompt\";\r\n\r\nexport const pkgManager = (): string => fs.existsSync(path.resolve(process.cwd(), \"yarn.lock\")) ? \"yarn\" : \"npm\";\r\n\r\nexport const runScript = (script: string, cmds: string): void => {\r\n  info(`RUNNING ${script}`, `it will run $ ${cmds}`);\r\n  const commandTorun: string[] = [\"run\", script];\r\n  cp.spawn(pkgManager(), commandTorun, {\r\n    shell: true,\r\n    stdio: \"inherit\",\r\n  });\r\n\r\n};\r\n\r\nexport const findScript = (src: string = \"\"): void => {\r\n  const PKGJSON = require(process.cwd().trim() + `/${src}/package.json`);\r\n  const { scripts } = PKGJSON;\r\n  listPrompt(\r\n    \"script\",\r\n    \"List of Available Scripts, Select the one you want to run\",\r\n    Object.keys(scripts),\r\n  )\r\n  .then((res : {script : string} ) => runScript(res.script, scripts[res.script]));\r\n\r\n};\r\n\r\nexport default (): void => findScript();\r\n","module.exports={name:\"npi\",version:\"0.0.0\",description:\"Know your npm script with knowing them ?\",main:\"bin/index.js\",scripts:{lint:\"eslint .\",jest:\" jest\",local:\" nodemon dist/cli.js\",release:\"standard-version\",\"type:build\":\"tsc\",commit:\"git-cz\",\"type:watch\":\"tsc -w\",build:\"parcel build --no-autoinstall ./src/index.ts --target node --out-dir bin --out-file index.js \",watch:\"parcel watch --no-autoinstall ./src/index.ts --target node --out-dir bin --out-file index.js \"},bin:{rpx:\"./bin/index.js\"},files:[\"bin\"],husky:{hooks:{\"commit-msg\":\"commitlint -E HUSKY_GIT_PARAMS\"}},\"lint-staged\":{\"*.js\":[\"eslint --fix\",\"git add\"],\"*.json\":[\"prettier --write\",\"git add\"]},keywords:[\"npm\",\"cli\",\"scripts\"],author:\"\",devDependencies:{\"@commitlint/cli\":\"8.0.0\",\"@commitlint/config-conventional\":\"8.0.0\",\"@commitlint/travis-cli\":\"8.0.0\",\"@types/chalk\":\"2.2.0\",\"@types/node\":\"12.0.8\",\"@types/update-notifier\":\"^2.5.0\",\"@types/yeoman-environment\":\"2.3.1\",\"@types/yeoman-generator\":\"3.1.3\",commitizen:\"3.1.1\",eslint:\"5.16.0\",husky:\"2.4.1\",jest:\"23.6.0\",\"lint-staged\":\"8.2.0\",nodemon:\"1.19.1\",\"parcel-bundler\":\"1.12.3\",\"parcel-plugin-shebang\":\"^1.2.5\",prettier:\"1.18.2\",\"standard-version\":\"6.0.1\",typescript:\"3.5.1\"},dependencies:{inquirer:\"^6.3.1\",prettycli:\"^1.4.3\",\"update-notifier\":\"^3.0.0\"},engines:{npm:\"6.9.1-next.0\"},repository:{type:\"git\",url:\"git+https://github.com/buildtip/create-web-app.git\"},license:\"Apache-2.0\"};","#!/usr/bin/env node\r\n\r\nimport notifier from \"update-notifier\";\r\nimport { manageArgv } from \"./utils/argument-manage\";\r\nimport runInteractiveShell from \"./utils/script-handler\";\r\n// tslint:disable-next-line: no-var-requires\r\nconst pkg: notifier.Settings = require(\"../package.json\");\r\nnotifier({ pkg }).notify();\r\n\r\nconst { argv } = process;\r\n\r\nargv.length <= 2 ? runInteractiveShell() : manageArgv(argv.pop());\r\n\r\nexport {\r\n  runInteractiveShell,\r\n  manageArgv,\r\n};\r\n"]}